---
//data imports
import SMedia from "../data/SMedia";
import LanguagePicker from "./LanguagePicker.astro";
import { getLangFromUrl, useTranslations } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---
<nav>
  <div class="flex flex-row items-center z-50 relative bg-[#111111]">
    <div class="flex justify-between items-center py-4 text-center w-full navbar px-4 lg:px-8">
      <a href=`/${lang}/` class="text-gradient">
        npm<span class="magic-text">Bytes</span>
      </a>
      <button
        id="navBtn"
        class="rounded-full bg-gray-900 border-none cursor-pointer h-10 w-10 flex justify-center items-center transition-transform duration-300 ease-in-out relative overflow-hidden hover:bg-gray-800 navBtn"
      >
        <svg
          fill="#ffffff"
          version="1.1"
          id="Capa_1"
          xmlns="http://www.w3.org/2000/svg"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          width="20px"
          height="20px"
          viewBox="0 0 80 80"
          xml:space="preserve"
        >
          <g>
            <path
              d="M64,48L64,48h-8V32h8c8.836,0,16-7.164,16-16S72.836,0,64,0c-8.837,0-16,7.164-16,16v8H32v-8c0-8.836-7.164-16-16-16
         S0,7.164,0,16s7.164,16,16,16h8v16h-8l0,0l0,0C7.164,48,0,55.164,0,64s7.164,16,16,16c8.837,0,16-7.164,16-16l0,0v-8h16v7.98
         c0,0.008-0.001,0.014-0.001,0.02c0,8.836,7.164,16,16,16s16-7.164,16-16S72.836,48.002,64,48z M64,8c4.418,0,8,3.582,8,8
         s-3.582,8-8,8h-8v-8C56,11.582,59.582,8,64,8z M8,16c0-4.418,3.582-8,8-8s8,3.582,8,8v8h-8C11.582,24,8,20.417,8,16z M16,72
         c-4.418,0-8-3.582-8-8s3.582-8,8-8l0,0h8v8C24,68.418,20.418,72,16,72z M32,48V32h16v16H32z M64,72c-4.418,0-8-3.582-8-8l0,0v-8
         h7.999c4.418,0,8,3.582,8,8S68.418,72,64,72z"
            ></path>
          </g>
        </svg>
      </button>
    </div>
    
  </div>
</nav>
<div id="myModal" tabindex="-1" aria-hidden="true" class="fixed top-0 left-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full bg-black bg-opacity-10">
  <div class="relative w-full max-w-md my-auto mx-auto lg:mt-[2%]">
      <div class="relative rounded-lg shadow bg-[#181818]">
          <button type="button" class="absolute top-3 right-2.5 text-gray-400 bg-transparent rounded-lg text-sm p-1.5 ml-auto inline-flex items-center hover:bg-[#5d5d5d] hover:text-white close">
              <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>  
              <span class="sr-only">Close modal</span>
          </button>
          <div class="px-6 py-4 border-b rounded-t border-gray-600">
              <h3 class="text-base font-semibold text-gray-900 lg:text-xl dark:text-white">
                  Navigation
              </h3>
          </div>
          <div class="px-6 mt-4">
            <LanguagePicker />
          </div>
          <div class="px-6 pt-4 pb-6 hidden md:block">
            <p class="text-gray-500 dark:text-gray-400">
               {t('nav.instruction')} <kbd class="px-2 py-1.5 text-xs font-semibold text-gray-800 bg-gray-100 border border-gray-200 rounded-lg dark:bg-gray-600 dark:text-gray-100 dark:border-gray-500">Ctrl</kbd> + <kbd class="px-2 py-1.5 text-xs font-semibold text-gray-800 bg-gray-100 border border-gray-200 rounded-lg dark:bg-gray-600 dark:text-gray-100 dark:border-gray-500">Shift</kbd> + <kbd class="px-2 py-1.5 text-xs font-semibold text-gray-800 bg-gray-100 border border-gray-200 rounded-lg dark:bg-gray-600 dark:text-gray-100 dark:border-gray-500">S</kbd> 
          </p>
              <ul class="my-4 space-y-3">
                  <li>
                      <a href=`/${lang}/` class="flex items-center p-3 text-base font-bold rounded-lg group hover:shadow bg-[#4a4a4a] hover:bg-[#5d5d5d] text-white">
                        <svg class="w-[16px] h-[16px] text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                          <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
                        </svg>
                          <span class="flex-1 ml-3 whitespace-nowrap">{t('nav.home')}</span>
                          
                      </a>
                  </li>
                  <li>
                      <a href=`/${lang}/blog/` class="flex items-center p-3 text-base font-bold rounded-lg bg-[#4a4a4a] hover:bg-[#5d5d5d] group hover:shadow text-white">
                        <svg class="w-[16px] h-[16px] text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 16 20">
                          <path d="M16 14V2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v15a3 3 0 0 0 3 3h12a1 1 0 0 0 0-2h-1v-2a2 2 0 0 0 2-2ZM4 2h2v12H4V2Zm8 16H3a1 1 0 0 1 0-2h9v2Z"/>
                        </svg>
                          <span class="flex-1 ml-3 whitespace-nowrap">Blog</span>
                      </a>
                  </li>
                  {
                    SMedia.map((item) => (
                      <li>
                        <a href= {item.url} class="flex items-center p-3 text-base font-bold  bg-[#4a4a4a] hover:bg-[#5d5d5d] rounded-lg  group hover:shadow text-white" target="_blank">
                          <span class="flex-1 ml-3 whitespace-nowrap">{item.name}</span>
                        </a>
                      </li>
                    ))
                  }
                  
                      <li>
                        <a href={`/${lang}/content/privacy-policy`} class="flex items-center p-3 text-base font-bold bg-[#4a4a4a] hover:bg-[#5d5d5d] rounded-lg group hover:shadow text-white" target="_blank">
                          <span class="flex-1 ml-3 whitespace-nowrap">{t('content.privacy')}</span>
                        </a>
                      </li>
                   
              </ul>
          </div>
      </div>
  </div>
</div>
<script>
  const modal = document.getElementById("myModal");
  const btn = document.getElementById("navBtn");
  const span = document.getElementsByClassName("close")[0];

  const openModal = function () {
    modal.style.display = "block";
  };

  const closeModal = function () {
    modal.style.display = "none";
  };

  btn.onclick = openModal;
  span.onclick = closeModal;

  document.addEventListener("keydown", function (event) {
    if (
      (event.ctrlKey || event.metaKey) &&
      event.shiftKey &&
      event.key === "S"
    ) {
      openModal();
    }
  });

  window.onclick = function (event) {
    if (event.target == modal) {
      closeModal();
    }
  };
</script>
