---
// utils imports
import { slugify, formatDate } from "../js/utils";
import Separation from "./Separation.astro";
const { category, title, author, date, image } = Astro.props;
const categories = category.split(",");
import { getLangFromUrl, useTranslations } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

---
<header>
  <div class="w-full px-4 md:px-16">
    <img src={image.src} alt={image.alt} />
    <p class="text-xl md:text-2xl font-semibold cursor-pointer text-white ease-in-out duration-500 hover:text-[#c5c5c5]">{title}</p>
    <p class="text-xs md:text-base">
      by <span class="text-npm-blue">{author}</span> â€¢ {formatDate(date)}
    </p>
    <div class="py-2">
      {
        categories.map((cat) => (
          <small>
            <a href={`/${lang}/category/${slugify(cat)}/`} class="text-xs font-medium inline-flex items-center px-2.5 py-0.5 rounded mr-2 bg-gray-700 text-gray-400 border border-gray-500">
              {cat.trim()}
            </a>
          </small>
        ))
      }
    </div>
    <br /><br />
    <Separation />
    <div class="tools-interaction">
      <div class="share-btn">
        <i class="fa-solid fa-share" style="color: #ffffff;"></i>
      </div>
      <div  id="btn" class="like-btn">
        <i class="fa-solid fa-heart like-button"></i>
      </div>
    </div>
    <Separation />
  </div>
</header>

<style>
  .fa-solid {
    color : white
  }
  .tools-interaction {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 2rem 0;
  }
  .share-btn {
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    width: 2.5rem;
    height: 2.5rem;
    background-color: #562bff;
    cursor: pointer;
    transition: ease-in-out 0.3s;
  }
  .share-btn:hover {
    background-color: #260a96a9;
    transition: ease-in-out 0.3s;
  }
  .share-btn:active {
    background-color: #444444;
    transition: ease-in-out 0.3s;
  }
  .share-button i {
    font-size: 1.2rem;
  }
  .like-btn {
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    width: 2.5rem;
    height: 2.5rem;
    background-color: #562bff;
    cursor: pointer;
    transition: ease-in-out 0.3s;
  }
  .like-btn:hover {
    background-color: #260a96a9;
    transition: ease-in-out 0.3s;
  }
  .like-btn:active {
    background-color: #444444;
    transition: ease-in-out 0.3s;
  }
  .like-button i {
    font-size: 1.2rem;
  }
  .share-btn, .like-btn {
  margin: 0 0.5rem;
}
  header {
    padding: 20px;
  }

  .container {
    max-width: 150vh;
    margin: 0 auto;
  }

  .small {
    font-size: 80%;
  }

  h1 {
    font-size: 36px;
  }

  p {
    font-size: 18px;
  }

  a {
    color: #007bff;
    text-decoration: none;
  }

  a:hover {
    text-decoration: underline;
  }
  img {
    max-width: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: 5px;
    display: block;
    margin: 0 auto;
  }
  .share-button {
    background-color: gray;
  }
  .liked {
   color: #bb2626; 
  }
  /*Responsive*/

  @media screen and (max-width: 768px) {
    .author-date {
      font-size: 12px;
    }
  }
</style>

<script>
const shareButton = document.querySelector(".share-btn");
const pageUrl = window.location.href;

shareButton.addEventListener("click", () => {
  navigator.clipboard.writeText(pageUrl);
});

const likeButton = document.querySelector(".like-btn");
likeButton.addEventListener('click', () => {
  if (getCookie('liked')) {
    return;
  }
  setCookie('liked', 'true', 365); 
  const heartIcon = likeButton.querySelector("i");
  heartIcon.classList.add("liked");
  heartIcon.style.color = "#bb2626";

});
if (getCookie('liked')) {
  const likeButton = document.querySelector(".like-btn");
  const heartIcon = likeButton.querySelector("i");
  heartIcon.classList.add("liked");
  heartIcon.style.color = "#bb2626";
}
function setCookie(name, value, days) {
  var expires = '';
  if (days) {
    var date = new Date();
    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
    expires = '; expires=' + date.toUTCString();
  }
  document.cookie = name + '=' + (value || '') + expires + '; path=/';
}
function getCookie(name) {
  var nameEQ = name + '=';
  var ca = document.cookie.split(';');
  for (var i = 0; i < ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) === ' ') c = c.substring(1, c.length);
    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
  }
  return null;
}
</script>

