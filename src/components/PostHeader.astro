---
// utils imports
import { slugify, formatDate } from "../js/utils";
import Separation from "./Separation.astro";
const { category, title, author, date, image } = Astro.props;
const categories = category.split(",");
import { getLangFromUrl, useTranslations } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const currentPath = Astro.url.pathname;
console.log(currentPath);
import TwitterBtn from "./Button/ShareButton/TwitterBtn.jsx";
---
<header class="relative">
  <div id="alert-c" class="absolute z-30 hidden ease-in-out duration-300 mx-auto bg-gray-500 bg-opacity-90 text-black top-0 left-0 lg:left-1/3 lg:w-1/3 px-6 rounded">
    <div class="flex flex-row gap-5 py-2">
      <div class="bg-gray-900 flex items-center bg-opacity-60 p-2 rounded">
        <svg class="w-4 h-4 text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 9h2v5m-2 0h4M9.408 5.5h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
        </svg>
      </div>
      <div>
        {t('alert.copy')}
      </div>
    </div>
  </div>
  <div class="w-full px-4 mt-2 md:px-16">
    <div class="flex justify-center">
      <img class="max-w-full object-cover object-center rounded block my-0" src={image.src} alt={image.alt} />
    </div>
    <p class="text-xl md:text-2xl font-semibold cursor-pointer text-white ease-in-out duration-500 hover:text-[#c5c5c5]">{title}</p>
    <p class="md:text-lg">
      by <span class="text-npm-blue">{author}</span> â€¢ {formatDate(date)}
    </p>
    <div class="py-2">
      {
        categories.map((cat) => (
          <small>
            <a href={`/${lang}/category/${slugify(cat)}/`} class="text-xs font-medium inline-flex items-center px-2.5 py-0.5 rounded mr-2 bg-white/30  border border-gray-500">
              {cat.trim()}
            </a>
          </small>
        ))
      }
    </div>
    <div class="flex justify-center items-center flex-col">
      <Separation />
      <div class="py-5 flex flex-row">
        <div id="share-button" class="bg-npm-blue rounded-full p-2.5 hover:bg-npm-hover-blue ease-in-out duration-200 cursor-pointer">
          <svg class="w-4 h-4 text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 16">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1.248 15C.22 11.77 2.275 4.232 9.466 4.232V2.079a1.025 1.025 0 0 1 1.644-.862l5.479 4.307a1.108 1.108 0 0 1 0 1.723l-5.48 4.307a1.026 1.026 0 0 1-1.643-.861V8.539C2.275 9.616 1.248 15 1.248 15Z"/>
          </svg>
        </div>
        <!-- <LikeBtn client:load/> -->
      </div>
      <Separation />
  </div>
  
</header>

<script>
const shareButton = document.getElementById('share-button');
const pageUrl = window.location.href;
const alertc = document.getElementById('alert-c');

shareButton.addEventListener("click", () => {
  navigator.clipboard.writeText(pageUrl);
  showAndHideAlert();
});

function showAndHideAlert() {
  alertc.style.display = "block";
  alertc.style.opacity = "1";

  setTimeout(() => {
    alertc.style.opacity = "0";
  }, 3000);

  setTimeout(() => {
    alertc.style.display = "none";
  }, 3500);
}

const likeButton = document.querySelector(".like-btn");
likeButton.addEventListener('click', () => {
  if (getCookie('liked')) {
    return;
  }
  setCookie('liked', 'true', 365); 
  const heartIcon = likeButton.querySelector("i");
  heartIcon.classList.add("liked");
  heartIcon.style.color = "#bb2626";

});
if (getCookie('liked')) {
  const likeButton = document.querySelector(".like-btn");
  const heartIcon = likeButton.querySelector("i");
  heartIcon.classList.add("liked");
  heartIcon.style.color = "#bb2626";
}
function setCookie(name, value, days) {
  var expires = '';
  if (days) {
    var date = new Date();
    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
    expires = '; expires=' + date.toUTCString();
  }
  document.cookie = name + '=' + (value || '') + expires + '; path=/';
}
function getCookie(name) {
  var nameEQ = name + '=';
  var ca = document.cookie.split(';');
  for (var i = 0; i < ca.length; i++) {
    var c = ca[i];
    while (c.charAt(0) === ' ') c = c.substring(1, c.length);
    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
  }
  return null;
}
</script>
